import { ActionTypes } from './actions';
import { refreshRoute } from './service';
const initialState = {
    activeRoute: '/',
    routes: {},
};
const reducer = (state = initialState, { type = '', path = '' } = {}) => {
    switch (type) {
        case ActionTypes.NAVIGATE:
        case ActionTypes.SET_ACTIVE_ROUTE:
            return Object.assign(Object.assign({}, state), { activeRoute: path, routes: Object.keys(state.routes).reduce((routes, routeName) => (Object.assign(Object.assign({}, routes), { [routeName]: refreshRoute(routeName, path) })), {}) });
        case ActionTypes.ADD_ROUTE:
            return Object.assign(Object.assign({}, state), { routes: Object.assign(Object.assign({}, state.routes), { [path]: refreshRoute(path, state.activeRoute) }) });
        default:
            return state;
    }
};
export default reducer;
//# sourceMappingURL=reducer.js.map