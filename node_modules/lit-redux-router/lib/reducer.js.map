{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../src/lib/reducer.ts"],"names":[],"mappings":"AACA,OAAO,EAAW,WAAW,EAAE,MAAM,WAAW,CAAC;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAqBzC,MAAM,YAAY,GAAG;IACnB,WAAW,EAAE,GAAG;IAChB,MAAM,EAAE,EAAE;CACX,CAAC;AAEF,MAAM,OAAO,GAAG,CACd,QAAmC,YAAY,EAC/C,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,KAAuB,EAAE,EAClC,EAAE;IACf,QAAQ,IAAI,EAAE;QACZ,KAAK,WAAW,CAAC,QAAQ,CAAC;QAC1B,KAAK,WAAW,CAAC,gBAAgB;YAC/B,uCACK,KAAK,KACR,WAAW,EAAE,IAAI,EACjB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CACtC,CAAC,MAAuC,EAAE,SAAiB,EAAyB,EAAE,CAAC,iCAClF,MAAM,KACT,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,IAC1C,EACF,EAAE,CACH,IACD;QACJ,KAAK,WAAW,CAAC,SAAS;YACxB,uCACK,KAAK,KACR,MAAM,kCACD,KAAK,CAAC,MAAM,KACf,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,OAE/C;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import type { ReadonlyDeep } from 'type-fest';\nimport { Actions, ActionTypes } from './actions';\nimport { refreshRoute } from './service';\n\nexport interface RouteParams {\n  [param: string]: string;\n}\n\nexport interface Route {\n  active: boolean;\n  params?: RouteParams;\n}\n\nexport interface RouterState {\n  activeRoute: string;\n  routes: Record<string, Route>;\n}\n\ninterface Action {\n  type?: string;\n  path?: string;\n}\n\nconst initialState = {\n  activeRoute: '/',\n  routes: {},\n};\n\nconst reducer = (\n  state: ReadonlyDeep<RouterState> = initialState,\n  { type = '', path = '' }: Action | Actions = {},\n): RouterState => {\n  switch (type) {\n    case ActionTypes.NAVIGATE:\n    case ActionTypes.SET_ACTIVE_ROUTE:\n      return {\n        ...state,\n        activeRoute: path,\n        routes: Object.keys(state.routes).reduce(\n          (routes: Readonly<Record<string, Route>>, routeName: string): Record<string, Route> => ({\n            ...routes,\n            [routeName]: refreshRoute(routeName, path),\n          }),\n          {},\n        ),\n      };\n    case ActionTypes.ADD_ROUTE:\n      return {\n        ...state,\n        routes: {\n          ...state.routes,\n          [path]: refreshRoute(path, state.activeRoute),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]}