import type { ReadonlyDeep } from 'type-fest';
import { Route, RouteParams, RouterState } from './reducer';
export interface State {
    router: RouterState;
}
export declare const getRoute: ({ router: { routes } }: ReadonlyDeep<State>, route?: string | undefined) => Route | undefined;
export declare const noRouteActive: ({ router: { routes } }: ReadonlyDeep<State>) => boolean;
export declare const isRouteActive: (state: ReadonlyDeep<State>, route?: string | undefined) => boolean;
export declare const getRouteParams: (state: ReadonlyDeep<State>, route?: string | undefined) => RouteParams;
//# sourceMappingURL=selectors.d.ts.map