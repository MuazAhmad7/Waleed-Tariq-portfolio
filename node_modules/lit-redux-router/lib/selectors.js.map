{"version":3,"file":"selectors.js","sourceRoot":"","sources":["../src/lib/selectors.ts"],"names":[],"mappings":"AAOA,MAAM,CAAC,MAAM,QAAQ,GAAG,CACtB,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAuB,EAC3C,KAAc,EACK,EAAE,CACrB,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAE9E,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAuB,EAAW,EAAE,CACpF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CACxB,CAAC,QAAiB,EAAE,KAAa,EAAW,EAAE,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,EAChF,IAAI,CACL,CAAC;AAEJ,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,KAA0B,EAAE,KAAc,EAAW,EAAE,WACnF,OAAA,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,OAAO,OAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,0CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA,EAAA,CAAC;AAEhG,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAA0B,EAAE,KAAc,EAAe,EAAE,kCACxF,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,0CAAE,MAAM,mCAAI,EAAE,GAAA,CAAC","sourcesContent":["import type { ReadonlyDeep } from 'type-fest';\nimport { Route, RouteParams, RouterState } from './reducer';\n\nexport interface State {\n  router: RouterState;\n}\n\nexport const getRoute = (\n  { router: { routes } }: ReadonlyDeep<State>,\n  route?: string,\n): Route | undefined =>\n  typeof route !== 'undefined' && route in routes ? routes[route] : undefined;\n\nexport const noRouteActive = ({ router: { routes } }: ReadonlyDeep<State>): boolean =>\n  Object.keys(routes).reduce(\n    (noActive: boolean, route: string): boolean => noActive && !routes[route].active,\n    true,\n  );\n\nexport const isRouteActive = (state: ReadonlyDeep<State>, route?: string): boolean =>\n  typeof route !== 'undefined' ? Boolean(getRoute(state, route)?.active) : noRouteActive(state);\n\nexport const getRouteParams = (state: ReadonlyDeep<State>, route?: string): RouteParams =>\n  getRoute(state, route)?.params ?? {};\n"]}